# Configuration properties for ArcGIS Enterprise on Kubernetes deployment
#
# ------------------------------------
# DEPLOYMENT PLATFORM
# ------------------------------------
#
# Ingress controller service type
#
# Possible values for INGRESS_TYPE:
#
#   NodePort        - Exposes the Service on each Node's IP at a static port (the NodePort). 
#                     You'll be able to contact the NodePort Service, from outside the cluster, 
#                     by requesting <NodeIP>:<NodePort>.
#   LoadBalancer    - Exposes the Service externally using a cloud provider's load balancer.
#                     The load balancer is created and configured automatically as a part of 
#                     the deployment.
#
INGRESS_TYPE="NodePort"
#
# Possible values for LOAD_BALANCER_TYPE (must choose one if INGRESS_TYPE="LoadBalancer", else 
# leave it blank):
#
#   azure-external   - Azure Load Balancer (External)
#   azure-internal   - Azure Load Balancer (Internal)
#   aws-nlb-external - AWS Network Load Balancer (External)
#   aws-nlb-internal - AWS Network Load Balancer (Internal)
#   gcp-external     - Google Cloud Platform TCP Load Balancer (External)
#   gcp-internal     - Google Cloud Platform TCP Load Balancer (Internal)
#
LOAD_BALANCER_TYPE=""
#
# Set USE_OPENSHIFT_ROUTE to true if you use an OpenShift route for incoming traffic.
#
USE_OPENSHIFT_ROUTE=false
#
# Use a pre-configured static public IP address and DNS label with the load balancer
# (optional).
#
LOAD_BALANCER_IP=""
#
# NodePort value in the range 30000-32767 (optional). 
# Leave it blank if you want Kubernetes Control Plane to assign an available port. 
#
NODE_PORT_HTTPS=""

# ------------------------------------
# NAMESPACE
# ------------------------------------
#
# The Kubernetes cluster namespace where ArcGIS Enterprise on Kubernetes will be deployed.
#
K8S_NAMESPACE=""

# ------------------------------------
# SITENAME
# ------------------------------------
#
# Used for a future feature to allow for multiple deployments within a single k8s namespace.
# Users should not edit this value.
#
ARCGIS_SITENAME="arcgis"

# ------------------------------------
# ENCRYPTION KEYFILE
# ------------------------------------
# The encryption keyfile is a plain text file used for AES-256 encryption/decryption
# of passwords. The contents of this file is arbitrary plain text and SHOULD NOT
# contain any passwords. This file should remain in a fixed location and the contents
# should not change.
ENCRYPTION_KEYFILE=""

# ------------------------------------
# CONTAINER REGISTRY
# ------------------------------------
#
# The registry host used to log into the container registry (Docker Hub).
#
REGISTRY_HOST="docker.io"
#
REGISTRY_REPO="esridocker"
#
# Full registry path to pull images.
#
CONTAINER_REGISTRY="${REGISTRY_HOST}/${REGISTRY_REPO}"
#
# Registry username for an account with permissions to pull from the Registry URL specified above.
# This will be used to create a registry secret.
#
CONTAINER_REGISTRY_USERNAME=""
#
# Registry password for the username specified above.
# This will be used to create a registry secret.
#
# NOTE: This password is AES-256 encrypted using the ENCRYPTION_KEYFILE specified above.
#
# To create an AES-256 encrypted password:
#
#    % echo "my.registry.password" | tools/password-encrypt/password-encrypt.sh -f /path/to/keyfile.txt
#
# That command will output an encrypted string.  Set CONTAINER_REGISTRY_PASSWORD to that encrypted value.
#
CONTAINER_REGISTRY_PASSWORD=""
#
# Registry secret name for container credentials.
#
CONTAINER_IMAGE_PULL_SECRET_NAME="${ARCGIS_SITENAME}-container-registry"
#	
# The default version tag for pulling images.	
#
VERSION_TAG="${VERSION_TAG:-dev-stable}"

# ------------------------------------
# FULLY QUALIFIED DOMAIN NAME
# ------------------------------------
#
# The fully qualified domain name (FQDN) to access ArcGIS Enterprise on Kubernetes. 
# This FQDN points to a load balancer, reverse proxy, edge router, or other web front-end
# configured to route traffic to the ingress controller.
# For example: <hostname>.<Domain>.com
#
ARCGIS_ENTERPRISE_FQDN=""
#
# Enter the context path to be used in the URL for ArcGIS Enterprise on Kubernetes. 
# For example, the context path of 'https://<FQDN>/arcgis/admin' would be 'arcgis'. 
# The path needs to be single level; more than one level is not supported.
#
CONTEXT="arcgis"
#
# URL with the specified reverse proxy or load balancer with the site context.
#
ROOT_ORG_BASE_URL="https://${ARCGIS_ENTERPRISE_FQDN}/${CONTEXT}/"

# ------------------------------------
# TLS CERTIFICATE
# ------------------------------------
#
# Choose one of the options below to enable HTTPS communication to the ingress 
# controller using Transport Layer Security (TLS). Unused options in this section 
# should be defined with empty quotes "". 
#
# Option 1: Use an existing Kubernetes TLS secret that contains a private key and a certificate.
# Enter the name of the existing TLS secret:
#
INGRESS_SERVER_TLS_SECRET=""
#
# Option 2: Use a .pfx file that contains the private key and certificate. Enter the full path 
# and password of the .pfx file:
#
# NOTE: This password is AES-256 encrypted using the ENCRYPTION_KEYFILE specified above
INGRESS_SERVER_TLS_PFX_FILE=""
INGRESS_SERVER_TLS_PFX_PSSWD=""
#
# Option 3: Use PEM format private Key (.key file) and certificate (.crt file). Enter the full
# path of the .key and .crt files:
#
INGRESS_SERVER_TLS_KEY_FILE=""
INGRESS_SERVER_TLS_CRT_FILE=""
#
# Option 4: Generate a self-signed certificate. Enter the common name for the self-signed 
# certificate:
#
INGRESS_SERVER_TLS_SELF_SIGN_CN=""

# ------------------------------------
# ADDITIONAL PROPERTIES
# ------------------------------------
#
# If you cannot run a privileged container, you can set the value to false and you
# will need to manually increase vm.max_map_count to 262144 by running the
# "sysctl -w vm.max_map_count=262144" command as root on each kubernetes node.
ALLOWED_PRIVILEGED_CONTAINERS=true

# Each container has a property called ImagePullPolicy which defines the
# behavior of pulling images from the container registry while starting a
# container. The default value is "IfNotPresent" which means the image is
# pulled only if it is not already present locally.
CONTAINER_IMAGE_PULL_POLICY="Always"

# HTTP Strict Transport Security
INGRESS_HSTS_ENABLED=false

# TLS protocol supported
INGRESS_SSL_PROTOCOLS="TLSv1.2 TLSv1.3"

# Supported Cipher Suites
INGRESS_SSL_CIPHERS="ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA"

# ------------------------------------
# ADD CUSTOM VARIABLES HERE
# ------------------------------------
#

