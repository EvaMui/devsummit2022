
# ArcGIS Enterprise properties
ARCGIS_SITENAME=${ARCGIS_SITENAME:-arcgis}
ARCGIS_RELEASE=10.9.1.0

# Should match the value in nfs-dynamic-pv properties
DEPLOYMENT_NAME=${DEPLOYMENT_NAME:-default}

# Kubernetes Cluster properties
K8S_NAMESPACE=${K8S_NAMESPACE:-arcgis}

# Kuberentes Cluster Domain
# Default value = cluster.local
# For user customization
K8S_CLUSTER_DOMAIN=${K8S_CLUSTER_DOMAIN:-cluster.local}
# Internal variable
K8S_SERVICE_DNS_SUFFIX="svc.${K8S_CLUSTER_DOMAIN}"

# Automatically set to true in a Helm install
HELM_DEPLOY=${HELM_DEPLOY:-false}

# Kube API Server connection timeouts
KUBE_API_CONNECTION_TIMEOUT_SECONDS=60
KUBE_API_WRITE_TIMEOUT_SECONDS=60
KUBE_API_READ_TIMEOUT_SECONDS=60

# Ingress Base URL
CONTEXT=${CONTEXT:-arcgis}
ARCGIS_ENTERPRISE_FQDN=${ARCGIS_ENTERPRISE_FQDN:-devent.esri.com}
ROOT_ORG_BASE_URL="https://${ARCGIS_ENTERPRISE_FQDN}/${CONTEXT}/"

# Predefine PV selectors for PODS.
PV_LABELS_FOR_MANAGED_DBMS="app:postgres;tier:storage"
PV_LABELS_FOR_BLOBSTORE="app:minio;tier:storage"
PV_LABELS_FOR_ELASTICSEARCH_MASTER="app:elasticsearch;role:master;tier:storage"
PV_LABELS_FOR_ELASTICSEARCH_DATA="app:elasticsearch;role:data;tier:storage"
PV_LABELS_FOR_CACHESTORE="app:ignite;tier:storage"
PV_LABELS_FOR_MANAGED_QUEUE="app:rabbitmq;tier:queue"

# Approximage storage space needed for admin-scratch-volume
SITE_VOLUME_STORAGE_SPACE_NEEDED=10Gi

# The default docker image tag for all deployed images
VERSION_TAG=${VERSION_TAG:-master}

## Elasticsearch properties
ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-YWRtaW4=}
ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-MWYyZDFlMmU2N2Rm}
ELASTICSEARCH_SERVICE_NAME=${ARCGIS_SITENAME}-spatiotemporal-index-store-abcde
# Number of master nodes in the cluster.
# If there is no dedicated data nodes, all the master nodes will also be configured as data nodes.
ELASTICSEARCH_MASTER_NODES=${ELASTICSEARCH_MASTER_NODES:-1}
# Number of dedicated data nodes in the cluster
ELASTICSEARCH_DEDICATED_DATA_NODES=${ELASTICSEARCH_DEDICATED_DATA_NODES:-0}


## Hosted ObjectStore Settings.
## Important: OBJECTSTORE_NODES * OBJECTSTORE_DISKS_PER_NODE should be 1 or 4n(where n = 1,2,3...)
OBJECTSTORE_NODES=${OBJECTSTORE_NODES:-2}
OBJECTSTORE_DISKS_PER_NODE=${OBJECTSTORE_DISKS_PER_NODE:-2}

# Supplemental Group ID
SUPPLEMENTAL_GROUP_ID=${SUPPLEMENTAL_GROUP_ID:-117932853}
# FS Group ID
FS_GROUP_ID=${FS_GROUP_ID:-117932853}
# Allow privileged Containers to run
ALLOWED_PRIVILEGED_CONTAINERS=${ALLOWED_PRIVILEGED_CONTAINERS:-true}

# Public Version Manifest URL
VERSION_MANIFEST_URL=${VERSION_MANIFEST_URL:-https://arcgis-kubernetes.s3.amazonaws.com/10.9/manifest/esriManifest.dat}

# ------------------------------------
# ENCRYPTION KEYFILE
# ------------------------------------
# The encryption keyfile is a plain text file used for AES-256 encryption/decryption
# of passwords. The contents of this file is arbitrary plain text and SHOULD NOT
# contain any passwords. This file should remain in a fixed location and the contents
# should not change.
#
# NOTE: This is a client-side variable which is not used in the admin api
ENCRYPTION_KEYFILE="${ENCRYPTION_KEYFILE}"

#############################
### Ingress-controller properties
#############################

# Avoid 413 - Request Entity Too Large error
PROXY_BODY_SIZE=${PROXY_BODY_SIZE:-0}

# Avoid error "upstream sent too big header while reading response header from upstream"
PROXY_BUFFER_SIZE=${PROXY_BUFFER_SIZE:-12k}

# Timeouts
PROXY_READ_TIMEOUT=${PROXY_READ_TIMEOUT:-600}
PROXY_SEND_TIMEOUT=${PROXY_SEND_TIMEOUT:-600}

# Fixed NodePorts
NODE_PORT_HTTPS=${NODE_PORT_HTTPS:-31443}

# Ingress class name
# default is nginx
INGRESS_CLASS=${INGRESS_CLASS:-arcgis-nginx}
# Use below, if using named ingress controller
#INGRESS_CLASS=nginx-ingress-default

# Ingress host/port
#
# Currently not set by the installer.
INGRESS_HOST=${INGRESS_HOST:-ingress-nginx}

# Can be "NodePort" or "LoadBalancer"
INGRESS_TYPE=${INGRESS_TYPE:-NodePort}

# ingress controller pod
RESOURCE_CPU_MIN_INGRESS=0.125
RESOURCE_CPU_MAX_INGRESS=1
RESOURCE_MEMORY_MIN_INGRESS=256Mi
RESOURCE_MEMORY_MAX_INGRESS=4Gi

# Load Balancer options
#
# Possible values for LOAD_BALANCER_TYPE (used in deploy.sh):
#
#   azure-external   - Azure Load Balancer (External)
#   azure-internal   - Azure Load Balancer (Internal)
#   aws-nlb-external - AWS Network Load Balancer (External)
#   aws-nlb-internal - AWS Network Load Balancer (Internal)
#   gcp-external     - Google Cloud Platform TCP Load Balancer (External)
#   gcp-internal     - Google Cloud Platform TCP Load Balancer (Internal)
#
LOAD_BALANCER_TYPE=${LOAD_BALANCER_TYPE:-azure-external}

# Set USE_OPENSHIFT_ROUTE to true if you use an OpenShift route for incoming traffic
#
USE_OPENSHIFT_ROUTE=${USE_OPENSHIFT_ROUTE:-false}

# Optional
LOAD_BALANCER_IP=${LOAD_BALANCER_IP}

# Ingress Controller TLS configuration options 1, 2, 3 and 4. Opt an option and provide details.

# Option 1: TLS Certificate secret name (Secret is externally managed)
INGRESS_SERVER_TLS_SECRET=${INGRESS_SERVER_TLS_SECRET}

# Option 2: PFX inputs
INGRESS_SERVER_TLS_PFX_FILE=${INGRESS_SERVER_TLS_PFX_FILE}
INGRESS_SERVER_TLS_PFX_PSSWD=${INGRESS_SERVER_TLS_PFX_PSSWD}

# Option 3: KEY and CRT inputs
INGRESS_SERVER_TLS_KEY_FILE=${INGRESS_SERVER_TLS_KEY_FILE}
INGRESS_SERVER_TLS_CRT_FILE=${INGRESS_SERVER_TLS_CRT_FILE}

# Option 4: Self sign, Generate KeyPair
INGRESS_SERVER_TLS_SELF_SIGN_CN=${INGRESS_SERVER_TLS_SELF_SIGNED_CN}

# NOTE: Don't change this default.
DEFAULT_INGRESS_SERVER_TLS_SECRET=${ARCGIS_SITENAME}-ingress-cert-pem
DEFAULT_INTERPOD_CERT_PEM_SUFFIX=interpod-cert-pem
DEFAULT_INTERPOD_CERT_PFX_SUFFIX=interpod-cert-pfx

# NOTE: Don't remove below
INGRESS_TLS_SECRET_NAME=

## Default Ingress Security Properties

INGRESS_HSTS_ENABLED=${INGRESS_HSTS_ENABLED:-false}
INGRESS_SSL_PROTOCOLS=${INGRESS_SSL_PROTOCOLS:-TLSv1.2 TLSv1.3}
INGRESS_SSL_CIPHERS=${INGRESS_SSL_CIPHERS:-ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA}


#############################
### Kubernetes Resource Names
### Format K8S_NAME_[COMPONENT_DESCRIPTION]_KIND
#############################

# Admin deployment names
K8S_NAME_ADMIN_DEPLOYMENT="${ARCGIS_SITENAME}-rest-administrator-api"
K8S_NAME_ADMIN_SERVICE="${ARCGIS_SITENAME}-rest-administrator-api"
K8S_NAME_ADMIN_INGRESS="${ARCGIS_SITENAME}-ingress-rest-administrator-api"

# Admin RBAC names
K8S_NAME_ADMIN_SERVICE_ACCOUNT="${ARCGIS_SITENAME}-admin-serviceaccount"
K8S_NAME_ADMIN_ROLE="${ARCGIS_SITENAME}-admin-role"
K8S_NAME_ADMIN_ROLE_BINDING="${ARCGIS_SITENAME}-admin-rolebinding"

# Framework Configmap/Secret names
K8S_NAME_LOG_SETTINGS_CONFIG_MAP="${ARCGIS_SITENAME}-log-settings"
K8S_NAME_SPATIOTEMPORAL_INDEX_STORE_INFO_SECRET="${ARCGIS_SITENAME}-spatiotemporal-index-store-info"
K8S_NAME_ENV_VARIABLES_SECRET="${ARCGIS_SITENAME}-env-variables"
K8S_NAME_SITE_INFO_SECRET="${ARCGIS_SITENAME}-site-info"
K8S_NAME_SERVER_CONTEXT_SECRET="${ARCGIS_SITENAME}-server-context"
K8S_NAME_CONFIG_LAST_MODIFIED_CONFIG_MAP="${ARCGIS_SITENAME}-config-last-modified"
K8S_NAME_QUEUE_CONFIG_CONFIG_MAP="${ARCGIS_SITENAME}-queue-config"

## Manager deployment names
K8S_NAME_MANAGER_DEPLOYMENT="${ARCGIS_SITENAME}-enterprise-manager"
K8S_NAME_MANAGER_SERVICE="${ARCGIS_SITENAME}-enterprise-manager"
K8S_NAME_MANAGER_INGRESS="${ARCGIS_SITENAME}-ingress-enterprise-manager"

## Help deployment names
K8S_NAME_HELP_DEPLOYMENT="${ARCGIS_SITENAME}-help"
K8S_NAME_HELP_SERVICE="${ARCGIS_SITENAME}-help"
K8S_NAME_HELP_INGRESS="${ARCGIS_SITENAME}-help-ingress"

## Public Ingress Controller deployment names
K8S_NAME_ING_CNTRLR_DEPLOYMENT="${ARCGIS_SITENAME}-ingress-controller"
K8S_NAME_ING_CNTRLR_SERVICE="${ARCGIS_SITENAME}-ingress-nginx"

## Public Ingress Controller ConfigMap/Secret names
K8S_NAME_ING_CNTRLR_NGINX_CONFIG_CONFIG_MAP="${ARCGIS_SITENAME}-ingress-controller-nginx-config"
K8S_NAME_ING_CNTRLR_TCP_SERVICES_CONFIG_MAP="${ARCGIS_SITENAME}-ingress-controller-tcp-services"
K8S_NAME_ING_CNTRLR_UDP_SERVICES_CONFIG_MAP="${ARCGIS_SITENAME}-ingress-controller-udp-services"

# Public Ingress Controller RBAC names
K8S_NAME_ING_CNTRLR_SERVICE_ACCOUNT="${ARCGIS_SITENAME}-ingress-serviceaccount"
K8S_NAME_ING_CNTRLR_ROLE="${ARCGIS_SITENAME}-ingress-role"
K8S_NAME_ING_CNTRLR_ROLE_BINDING="${ARCGIS_SITENAME}-ingress-rolebinding"

# Prometheus RBAC names
K8S_NAME_PROMETHEUS_SERVICE_ACCOUNT="${ARCGIS_SITENAME}-prometheus-serviceaccount"
K8S_NAME_PROMETHEUS_ROLE="${ARCGIS_SITENAME}-prometheus-role"
K8S_NAME_PROMETHEUS_ROLE_BINDING="${ARCGIS_SITENAME}-prometheus-rolebinding"

# Queue RBAC names
K8S_NAME_QUEUE_SERVICE_ACCOUNT="${ARCGIS_SITENAME}-queue-serviceaccount"
K8S_NAME_QUEUE_ROLE="${ARCGIS_SITENAME}-queue-role"
K8S_NAME_QUEUE_ROLE_BINDING="${ARCGIS_SITENAME}-queue-rolebinding"

# Note: The above list of K8s resource names is not complete.
# It is an initial list to begin with and captures most of the
# K8s resources created during the deployment script run, except
# the following, which are captured by other environment properties already.
#     * siteName-container-registry
#     * siteName-ingress-cert-pem
#     * siteName-interpod-cert-pem
#     * siteName-interpod-cert-pfx

#############################
### Deployment properties
#############################
SELECTOR_INSTANCE_NAME=blue

#############################
### Ingress controller properties
#############################
ING_CNTRLR_ELECTION_ID="${ARCGIS_SITENAME}-ingress-controller-leader"
PRIVATE_ING_CNTRLR_ELECTION_ID="${ARCGIS_SITENAME}-private-ingress-controller-leader"

#############################
### Help properties
#############################
HELP_APP_PATH=/${CONTEXT}'/help(.*)'
HELP_SERVICE_PORT=8080

#############################
### List of docker images
#############################

REGISTRY_HOST=${REGISTRY_HOST:-harbor-west.esri.com}
REGISTRY_REPO=${REGISTRY_REPO:-endeavour-stable}
CONTAINER_REGISTRY="${REGISTRY_HOST}/${REGISTRY_REPO}"

# Dont remove below, these empty properties needed so that it get saved in env-variables secret.
CONTAINER_REGISTRY_USERNAME=""
CONTAINER_REGISTRY_PASSWORD=""

# There could be two options for CONTAINER_IMAGE_PULL_SECRET_NAME.

# Option 1: System (or Enterprise) managed. This is the current and only option.
# In this case container registry username and password needs to be provided.
# In this case, CONTAINER_IMAGE_PULL_SECRET_NAME will be an internal variable,
# and its value is generated by code.
CONTAINER_IMAGE_PULL_SECRET_NAME=${ARCGIS_SITENAME}-container-registry
CONTAINER_IMAGE_PULL_SECRET_SYSTEM_MANAGED=true

# Option 2: User managed. This option is not available before and at 10.9.1.
# In this case container registry username and password need NOT be provided.
# In this case, CONTAINER_IMAGE_PULL_SECRET_NAME will be provided by user.
# CONTAINER_IMAGE_PULL_SECRET_NAME=${CONTAINER_IMAGE_PULL_SECRET_NAME:-${ARCGIS_SITENAME}-container-registry}
# CONTAINER_IMAGE_PULL_SECRET_SYSTEM_MANAGED=${CONTAINER_IMAGE_PULL_SECRET_SYSTEM_MANAGED:-true}

# NOTES: Currently the CONTAINER_IMAGE_PULL_SECRET_NAME is system managed by default.
# The boolean CONTAINER_IMAGE_PULL_SECRET_SYSTEM_MANAGED will help to identify that.
# Later we can provide an option for user to directly provide
# CONTAINER_IMAGE_PULL_SECRET_NAME and manages it externally. In that case, we will change
# CONTAINER_IMAGE_PULL_SECRET_SYSTEM_MANAGED=false.
CONTAINER_IMAGE_PULL_POLICY=${CONTAINER_IMAGE_PULL_POLICY:-Always}

# enterprise admin api container
CONTAINER_IMAGE_URL_ENTERPRISE_ADMIN_API=${CONTAINER_REGISTRY}/enterprise-admin:${VERSION_TAG}

# postgres container -
CONTAINER_IMAGE_URL_STORE_POSTGRES=${CONTAINER_REGISTRY}/arcgis-postgresql:${VERSION_TAG}

# minio container
CONTAINER_IMAGE_URL_STORE_MINIO=${CONTAINER_REGISTRY}/arcgis-minio:${VERSION_TAG}

# relational data store container
CONTAINER_IMAGE_URL_STORE_RELATIONAL=${CONTAINER_REGISTRY}/relational-datastore:${VERSION_TAG}

# Spatiotemporal data store container
CONTAINER_IMAGE_URL_STORE_SBDS=${CONTAINER_REGISTRY}/arcgis-elasticsearch:${VERSION_TAG}

# Cache data store container
CONTAINER_IMAGE_URL_STORE_IGNITE=${CONTAINER_REGISTRY}/arcgis-ignite:${VERSION_TAG}

# portal content store data container

# portal sharing api container
CONTAINER_IMAGE_URL_PORTAL_SHARING_API=${CONTAINER_REGISTRY}/sharing:${VERSION_TAG}

# home app
CONTAINER_IMAGE_URL_PORTAL_HOME_APP=${CONTAINER_REGISTRY}/home:${VERSION_TAG}

# manager app
CONTAINER_IMAGE_URL_MANAGER_APP=${CONTAINER_REGISTRY}/manager:${VERSION_TAG}

# jsapi
CONTAINER_IMAGE_URL_PORTAL_JSAPI=${CONTAINER_REGISTRY}/jsapi:${VERSION_TAG}

# catalog server
CONTAINER_IMAGE_URL_CATALOG_SERVER=${CONTAINER_REGISTRY}/catalog-server:${VERSION_TAG}

# config factory server
CONTAINER_IMAGE_URL_CONFIG_FACTORY_SERVER=${CONTAINER_REGISTRY}/config-factory-server:${VERSION_TAG}

# rest service container - map server
CONTAINER_IMAGE_URL_MAP_SERVER=${CONTAINER_REGISTRY}/map-server:${VERSION_TAG}

# rest service container - geocode server
CONTAINER_IMAGE_URL_GEOCODE_SERVER=${CONTAINER_REGISTRY}/geocode-server:${VERSION_TAG}

# rest service container - geometry server
CONTAINER_IMAGE_URL_GEOMETRY_SERVER=${CONTAINER_REGISTRY}/geometry-server:${VERSION_TAG}

# rest service container - image server
CONTAINER_IMAGE_URL_IMAGE_SERVER=${CONTAINER_REGISTRY}/image-server:${VERSION_TAG}

# rest service container - gp-proxy server
CONTAINER_IMAGE_URL_GPPROXY_SERVER=${CONTAINER_REGISTRY}/gp-proxy-server:${VERSION_TAG}

# gp-server
CONTAINER_IMAGE_URL_GP_SERVER=${CONTAINER_REGISTRY}/gp-server:${VERSION_TAG}

# feature-server
CONTAINER_IMAGE_URL_SDS_FEATURE_SERVER=${CONTAINER_REGISTRY}/sds-feature-server:${VERSION_TAG}

# tile-server
CONTAINER_IMAGE_URL_TILE_SERVER=${CONTAINER_REGISTRY}/tile-server:${VERSION_TAG}

# monitoring container - prometheus
CONTAINER_IMAGE_URL_PROMETHEUS=${CONTAINER_REGISTRY}/arcgis-prometheus:${VERSION_TAG}

# monitoring container - grafana
CONTAINER_IMAGE_URL_GRAFANA=${CONTAINER_REGISTRY}/arcgis-grafana:${VERSION_TAG}

# filebeat container
CONTAINER_IMAGE_URL_FILEBEAT=${CONTAINER_REGISTRY}/arcgis-filebeat:${VERSION_TAG}

# rabbitmq container
CONTAINER_IMAGE_URL_RABBITMQ=${CONTAINER_REGISTRY}/enterprise-rabbitmq:${VERSION_TAG}

# Help docs container
CONTAINER_IMAGE_URL_HELP=${CONTAINER_REGISTRY}/help:${VERSION_TAG}

# Enterprise Admin Tools
CONTAINER_IMAGE_URL_ADMIN_TOOLS=${CONTAINER_REGISTRY}/enterprise-admin-tools:${VERSION_TAG}

# Enterprise Upgrader
CONTAINER_IMAGE_URL_UPGRADER=${CONTAINER_REGISTRY}/enterprise-admin-tools:${VERSION_TAG}

# Portal Content Template
CONTAINER_IMAGE_URL_PORTAL_CONTENT_TEMPLATE=${CONTAINER_REGISTRY}/portal-content-template:${VERSION_TAG}

# Postgres Upgrader
CONTAINER_IMAGE_URL_POSTGRES_UPGRADER=${CONTAINER_REGISTRY}/postgres-upgrade-tools:${VERSION_TAG}

# ingress-controller
CONTAINER_IMAGE_URL_INGRESS_CONTROLLER=${CONTAINER_REGISTRY}/arcgis-ingress-controller:${VERSION_TAG}

# APP CONTAINER
CONTAINER_IMAGE_URL_PORTAL_APPS=${CONTAINER_REGISTRY}/apps:${VERSION_TAG}

# BUSYBOX CONTAINER	
CONTAINER_IMAGE_URL_BUSYBOX=${CONTAINER_REGISTRY}/arcgis-busybox:${VERSION_TAG}	

# BACKUP AND RESTORE CONTAINER
CONTAINER_IMAGE_URL_DISASTER_RECOVERY=${CONTAINER_REGISTRY}/arcgis-disaster-recovery:${VERSION_TAG}	

# WEB PROXY SIDECAR CONTAINER
CONTAINER_IMAGE_URL_WEB_PROXY=${CONTAINER_REGISTRY}/arcgis-nginx-web:${VERSION_TAG} 

# WEB STYLE APP CONTAINER
CONTAINER_IMAGE_URL_PORTAL_WEB_STYLE_APP=${CONTAINER_REGISTRY}/web-style:${VERSION_TAG}

#Liveness and Readiness Probe for Admin Deployment
LIVENESS_PERIOD_SECONDS=30
READINESS_PERIOD_SECONDS=30
STARTUP_INIT_DELAY_SECONDS=0
STARTUP_FAILURE_THRESHOLD_COUNT=30
STARTUP_PERIOD_SECONDS=30
LIVENESS_FAILURE_THRESHOLD_COUNT=3
READINESS_FAILURE_THRESHOLD_COUNT=3
#Single Node deployment resource
SCALE_RESOURCE_REQUEST=0.25
SCALE_RESOURCE_LIMITS=0.75
SINGLE_NODE_DEPLOYMENT=false
SCALE_DEPLOYMENT_LIMITS=false

# Resource Request and Limit For Each Deployment

# admin pod
RESOURCE_CPU_MIN_ADMIN=0.5
RESOURCE_CPU_MAX_ADMIN=1
RESOURCE_MEMORY_MIN_ADMIN=1Gi
RESOURCE_MEMORY_MAX_ADMIN=2Gi

# filebeat pod
RESOURCE_CPU_MIN_FILEBEAT=0.05
RESOURCE_CPU_MAX_FILEBEAT=0.25
RESOURCE_MEMORY_MIN_FILEBEAT=32Mi
RESOURCE_MEMORY_MAX_FILEBEAT=50Mi

# postgres pod
RESOURCE_CPU_MIN_POSTGRES=0.5
RESOURCE_CPU_MAX_POSTGRES=4
RESOURCE_MEMORY_MIN_POSTGRES=2Gi
RESOURCE_MEMORY_MAX_POSTGRES=8Gi

# minio pod
RESOURCE_CPU_MIN_MINIO=0.5
RESOURCE_CPU_MAX_MINIO=4
RESOURCE_MEMORY_MIN_MINIO=2Gi
RESOURCE_MEMORY_MAX_MINIO=8Gi

# cachestore pod
RESOURCE_CPU_MIN_CACHESTORE=0.5
RESOURCE_CPU_MAX_CACHESTORE=1
RESOURCE_MEMORY_MIN_CACHESTORE=3Gi
RESOURCE_MEMORY_MAX_CACHESTORE=3Gi

# elastic coordinator pod
RESOURCE_CPU_MIN_ELASTIC_COORDINATOR=0.5
RESOURCE_CPU_MAX_ELASTIC_COORDINATOR=4
RESOURCE_MEMORY_MIN_ELASTIC_COORDINATOR=4Gi
RESOURCE_MEMORY_MAX_ELASTIC_COORDINATOR=8Gi

# elastic data pod
RESOURCE_CPU_MIN_ELASTIC_DATA=0.5
RESOURCE_CPU_MAX_ELASTIC_DATA=4
RESOURCE_MEMORY_MIN_ELASTIC_DATA=4Gi
RESOURCE_MEMORY_MAX_ELASTIC_DATA=8Gi

# rabbitmq pod
RESOURCE_CPU_MIN_RABBITMQ=0.125
RESOURCE_CPU_MAX_RABBITMQ=4
RESOURCE_MEMORY_MIN_RABBITMQ=1Gi
RESOURCE_MEMORY_MAX_RABBITMQ=4Gi

# manager pod
RESOURCE_CPU_MIN_MANAGER=0.05
RESOURCE_CPU_MAX_MANAGER=0.5
RESOURCE_MEMORY_MIN_MANAGER=128Mi
RESOURCE_MEMORY_MAX_MANAGER=256Mi

# portal template job
RESOURCE_CPU_MIN_PORTAL_TEMPLATE=0.25
RESOURCE_CPU_MAX_PORTAL_TEMPLATE=1
RESOURCE_MEMORY_MIN_PORTAL_TEMPLATE=1Gi
RESOURCE_MEMORY_MAX_PORTAL_TEMPLATE=1Gi

# upgrader job
RESOURCE_CPU_MIN_UPGRADER=0.125
RESOURCE_CPU_MAX_UPGRADER=2
RESOURCE_MEMORY_MIN_UPGRADER=256Mi
RESOURCE_MEMORY_MAX_UPGRADER=4Gi

# relds job
RESOURCE_CPU_MIN_RELDSJOB=0.25
RESOURCE_CPU_MAX_RELDSJOB=1
RESOURCE_MEMORY_MIN_RELDSJOB=1Gi
RESOURCE_MEMORY_MAX_RELDSJOB=1Gi

# portal home app pod
RESOURCE_CPU_MIN_PORTAL_HOME=0.05
RESOURCE_CPU_MAX_PORTAL_HOME=0.5
RESOURCE_MEMORY_MIN_PORTAL_HOME=128Mi
RESOURCE_MEMORY_MAX_PORTAL_HOME=256Mi

# portal sharing app pod
RESOURCE_CPU_MIN_PORTAL_SHARING=0.5
RESOURCE_CPU_MAX_PORTAL_SHARING=1
RESOURCE_MEMORY_MIN_PORTAL_SHARING=1Gi
RESOURCE_MEMORY_MAX_PORTAL_SHARING=3Gi

# portal jsapi
RESOURCE_CPU_MIN_PORTAL_JSAPI=0.05
RESOURCE_CPU_MAX_PORTAL_JSAPI=0.5
RESOURCE_MEMORY_MIN_PORTAL_JSAPI=64Mi
RESOURCE_MEMORY_MAX_PORTAL_JSAPI=64Mi

# webapp builder pod
RESOURCE_CPU_MIN_WEBAPPBUILDER=0.05
RESOURCE_CPU_MAX_WEBAPPBUILDER=0.5
RESOURCE_MEMORY_MIN_WEBAPPBUILDER=64Mi
RESOURCE_MEMORY_MAX_WEBAPPBUILDER=64Mi

# catalogserver pod
RESOURCE_CPU_MIN_CATALOGSERVER=0.125
RESOURCE_CPU_MAX_CATALOGSERVER=1
RESOURCE_MEMORY_MIN_CATALOGSERVER=500Mi
RESOURCE_MEMORY_MAX_CATALOGSERVER=4Gi

# config factory pod
RESOURCE_CPU_MIN_CONFIGFACTORY=0.125
RESOURCE_CPU_MAX_CONFIGFACTORY=1
RESOURCE_MEMORY_MIN_CONFIGFACTORY=1Gi
RESOURCE_MEMORY_MAX_CONFIGFACTORY=2Gi

# grafana pod
RESOURCE_CPU_MIN_GRAFANA=0.05
RESOURCE_CPU_MAX_GRAFANA=0.5
RESOURCE_MEMORY_MIN_GRAFANA=128Mi
RESOURCE_MEMORY_MAX_GRAFANA=256Mi

# prometheus pod
RESOURCE_CPU_MIN_PROMETHEUS=0.125
RESOURCE_CPU_MAX_PROMETHEUS=1
RESOURCE_MEMORY_MIN_PROMETHEUS=256Mi
RESOURCE_MEMORY_MAX_PROMETHEUS=4Gi

# helpdoc pod
RESOURCE_CPU_MIN_HELPDOC=0.05
RESOURCE_CPU_MAX_HELPDOC=0.5
RESOURCE_MEMORY_MIN_HELPDOC=128Mi
RESOURCE_MEMORY_MAX_HELPDOC=256Mi

# portal apps pod
RESOURCE_CPU_MIN_PORTAL_APP=0.05
RESOURCE_CPU_MAX_PORTAL_APP=0.5
RESOURCE_MEMORY_MIN_PORTAL_APP=128Mi
RESOURCE_MEMORY_MAX_PORTAL_APP=256Mi

# folder validation job
RESOURCE_CPU_MIN_ADMIN_JOB=0.125
RESOURCE_CPU_MAX_ADMIN_JOB=0.5
RESOURCE_MEMORY_MIN_ADMIN_JOB=64Mi
RESOURCE_MEMORY_MAX_ADMIN_JOB=256Mi

# private ingress controller
RESOURCE_CPU_MIN_PRIVATE_INGRESS=0.125
RESOURCE_CPU_MAX_PRIVATE_INGRESS=0.5
RESOURCE_MEMORY_MIN_PRIVATE_INGRESS=64Mi
RESOURCE_MEMORY_MAX_PRIVATE_INGRESS=256Mi

# web proxy sidecar
RESOURCE_CPU_MIN_WEB_PROXY=0.125
RESOURCE_CPU_MAX_WEB_PROXY=0.5
RESOURCE_MEMORY_MIN_WEB_PROXY=64Mi
RESOURCE_MEMORY_MAX_WEB_PROXY=256Mi

# web style app pod
RESOURCE_CPU_MIN_WEBSTYLE=0.05
RESOURCE_CPU_MAX_WEBSTYLE=0.5
RESOURCE_MEMORY_MIN_WEBSTYLE=128Mi
RESOURCE_MEMORY_MAX_WEBSTYLE=256Mi

# DR job pod
RESOURCE_CPU_MIN_DR_JOB=0.5
RESOURCE_CPU_MAX_DR_JOB=1
RESOURCE_MEMORY_MIN_DR_JOB=2Gi
RESOURCE_MEMORY_MAX_DR_JOB=8Gi
